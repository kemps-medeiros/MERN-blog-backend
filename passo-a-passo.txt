GIT REMOTE -V

Iniciar projeto node
 - npm init -y

 intalar express 
- npm i express

criar index.js e configurar o express 

criar pastas config / controllers / models / routes

criar banco de dados no mongodb

criar arquivo db.js dentro de CONFIG 
e configurar
ecportar o 'connect' e depois importar o 'connect' no arquivo index.js 

instalar o nodemon 

- npm install -D nodemon 

rodar com nodemon
nodemon index.js

configurar nodemon
"scripts": {
    "dev": "nodemon index.js"

    e depois rodar com npm run dev

Criar rota userRoutes dentro de routes

Criar userController na pasta controllers

instalar o pacote body-parser
    - npm i body-parser

configurar as rotas e testar no insomnia

instalar o express validator 

npm install --save express-validator

configurar o express-validator dentro do userController

Criar um arquivo Users dentro de Models, e configurar
um Schema para ele.

Depois voltar no userController para configurar a rota que vai cadastrar no banco de dados
Não esquecer de importar o Schema nesse arquivo

instalar os pacotes: 
jsonwebtoken - criar um token
bcrypt - criptografar a senha

continuar configurando a rota register , conigurando tambem o password e o token,
usando as bibliotecas instaladas

criar a API de login
login
loginValidations

criar a rota de login

===> CONFIGURAR O SETUP DO REACT
-na pasta do projeto digitar:
npx create-react-app client
(client vai ser a pasta que vai conter o react, a parte frontend de nossa aplicação)

-instalar o pacote concurrently,
digitar:
(digitar isso na pasta raiz do projeto: /mernblog) 
npm i concurrently
(isso é para executar vários comandos de forma simultanea, como npm run dev(para rodar node)
e outro para rodar react)

Atualizar o package.json da pasta raiz (backend) para:
    "server": "nodemon index.js",
    "client": "npm start --prefix client", (rodar frontend)
    "clientInstall": "npm install --prefix client", (instalar pacote na pasta client frontend)
    "dev": "concurrently \" npm run server \" \" npm run client \"" (rodar backend e frontend simultaneos)


